model:

  BooleanDefaultTrue:
    type: boolean
    default: true

  ID:
    type: integer
    minimum: 1

  ID_null:
    type: integer
    minimum: 1
    nullable: true

  MACAddress:
    description: MAC address
    example: 11:22:33:44:55:66
    maxLength: 17
    minLength: 17
    pattern: ^([A-Fa-f0-9]{2}:){5}[A-Fa-f0-9]{2}$
    type: string

  ReadOnlyID:
    description: Database ID
    format: int64
    readOnly: true
    allOf:
      - $ref: '#/model/ID'

  ReadOnlyDateTime:
    format: date-time
    readOnly: true
    type: string

  String64:
    type: string
    maxLength: 64

  String128:
    type: string
    maxLength: 128

  String1024:
    type: string
    maxLength: 1024

  TimestampModel:
    type: object
    properties:
      created_at:
        description: Date-time of database creation
        allOf:
          - $ref: '#/model/ReadOnlyDateTime'
      updated_at:
        description: Date-time of last update on database
        allOf:
          - $ref: '#/model/ReadOnlyDateTime'

  UUID:
    type: string
    format: uuid

responses:

  problem:
    description: Problem details ([RFC 7807](https://tools.ietf.org/html/rfc7807))
    content:
      application/json:
        schema:
          type: object
          properties:
            type:
              type: string
            title:
              type: string
            detail:
              type: string
            status:
              type: integer
          additionalProperties: true
        example: {
          "detail": "Invalid token",
          "status": 401,
          "title": "Unauthorized",
          "type": "about:blank"
        }

  ssh_authorized_keys:
    description: |
      Plain text response containing a list of SSH public keys in
      *authorized_keys* format (see [SSH
      manual](https://www.openssh.com/manual.html)).
    content:
      text/plain:
        schema:
          type: string
        example: |
          ssh-ed25519 AAAAexamplesshkeyexamplesshkeyexamplesshkeyABCD
