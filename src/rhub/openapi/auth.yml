model:

  User:
    type: object
    properties:
      id:
        allOf:
          - $ref: 'common.yml#/model/ID'
          - readOnly: true
      ldap_dn:
        type: string
        nullable: true
        example: uid=testuser,ou=users,dc=example,dc=com
      external_uuid:
        type: string
        format: uuid
        readOnly: true
        nullable: true
      name:
        type: string
        maxLength: 64
        nullable: true
      email:
        type: string
        format: email
        nullable: true
      ssh_keys:
        type: array
        items:
          type: string
          example: ssh-ed25519 AAAAexamplesshkeyexamplesshkeyexamplesshkeyABCD
    allOf:
      - $ref: 'common.yml#/model/TimestampModel'

  Token:
    type: object
    properties:
      id:
        allOf:
          - $ref: 'common.yml#/model/ID'
          - readOnly: true
      token:
        description: Secret, returned only when creating a new token.
        type: string
        readOnly: true
      created_at:
        type: string
        format: date-time
        readOnly: true
      expires_at:
        type: string
        format: date-time

  Group:
    type: object
    properties:
      id:
        allOf:
          - $ref: 'common.yml#/model/ID'
          - readOnly: true
      name:
        type: string
        maxLength: 64

parameters:

  user_id:
    name: user_id
    in: path
    description: ID of the user
    required: true
    schema:
      $ref: 'common.yml#/model/ID'
  token_id:
    name: token_id
    in: path
    description: ID of the token
    required: true
    schema:
      $ref: 'common.yml#/model/ID'
  group_id:
    name: group_id
    in: path
    description: ID of the user
    required: true
    schema:
      $ref: 'common.yml#/model/ID'

endpoints:

  user_list:
    summary: Get user list
    tags: [auth]
    operationId: rhub.api.auth.user.user_list
    parameters:
      - name: filter
        in: query
        style: deepObject
        schema:
          type: object
          properties:
            name:
              type: string
            group_id:
              $ref: 'common.yml#/model/ID'
            group_name:
              type: string
      - name: sort
        in: query
        description: Sort users by attribute.
        schema:
          type: string
          enum:
            - name
            - -name
      - name: page
        in: query
        description: Page number (``0`` indexed).
        schema:
          type: integer
          minimum: 0
      - name: limit
        in: query
        schema:
          type: integer
          minimum: 1
    responses:
      '200':
        description: List of User
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/model/User'
                total:
                  type: integer
                  minimum: 0
                  description: The total number of items
      default:
        $ref: 'common.yml#/responses/problem'
    security:
      - basic: []
      - bearer: []

  user_get:
    summary: Get user
    tags: [auth]
    operationId: rhub.api.auth.user.user_get
    parameters:
      - $ref: '#/parameters/user_id'
    responses:
      '200':
        description: Success
        content:
          application/json:
            schema:
              $ref: '#/model/User'
      default:
        $ref: 'common.yml#/responses/problem'
    security:
      - basic: []
      - bearer: []

  user_ssh_keys:
    summary: Get user's SSH keys
    tags: [auth]
    description: |
      Endpoint to get user's SSH keys.

      Response is plain text in authorized_keys format and this endpoint does
      not require authentication, so it can be used in `AuthorizedKeysCommand`
      script (see [SSH manual](https://www.openssh.com/manual.html)).
    operationId: rhub.api.auth.user.user_ssh_keys
    parameters:
      - $ref: '#/parameters/user_id'
    responses:
      '200':
        $ref: 'common.yml#/responses/ssh_authorized_keys'

  token_list:
    summary: List tokens
    tags: [auth]
    operationId: rhub.api.auth.token.token_list
    parameters:
      - $ref: '#/parameters/user_id'
    responses:
      '200':
        description: List of tokens
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/model/Token'
                total:
                  type: integer
                  minimum: 0
                  description: The total number of items
      default:
        $ref: 'common.yml#/responses/problem'
    security:
      - basic: []
      - bearer: []

  group_list:
    summary: Get group list
    tags: [auth]
    operationId: rhub.api.auth.group.group_list
    parameters:
      - name: filter
        in: query
        style: deepObject
        schema:
          type: object
          properties:
            name:
              type: string
            user_id:
              $ref: 'common.yml#/model/ID'
            user_name:
              type: string
      - name: sort
        in: query
        description: Sort groups by attribute.
        schema:
          type: string
          enum:
            - name
            - -name
      - name: page
        in: query
        description: Page number (``0`` indexed).
        schema:
          type: integer
          minimum: 0
      - name: limit
        in: query
        schema:
          type: integer
          minimum: 1
    responses:
      '200':
        description: List of groups
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/model/Group'
                total:
                  type: integer
                  minimum: 0
                  description: The total number of items
    security:
      - basic: []
      - bearer: []

  group_get:
    summary: Get group
    tags: [auth]
    operationId: rhub.api.auth.group.group_get
    parameters:
      - $ref: '#/parameters/group_id'
    responses:
      '200':
        description: Success
        content:
          application/json:
            schema:
              $ref: '#/model/Group'
      default:
        $ref: 'common.yml#/responses/problem'
    security:
      - basic: []
      - bearer: []

  me:
    summary: Get info about logged in user
    tags: [auth]
    operationId: rhub.api.auth.user.get_current_user
    responses:
      '200':
        description: Success
        content:
          application/json:
            schema:
              $ref: '#/model/User'
      default:
        $ref: 'common.yml#/responses/problem'
    security:
      - basic: []
      - bearer: []
