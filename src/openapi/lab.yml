model:

  Quota:
    type: object
    properties:
      num_vcpus:
        type: integer
        minimum: 1
        nullable: true
      ram_mb:
        type: integer
        minimum: 1
        nullable: true
      num_volumes:
        type: integer
        minimum: 1
        nullable: true
      volumes_gb:
        type: integer
        minimum: 1
        nullable: true

  Region:
    type: object
    properties:
      id:
        allOf:
          - $ref: 'common.yml#/model/ID'
          - readOnly: true
      name:
        type: string
        maxLength: 32
        example: rdu2-a
      location:
        description: Geographical location of region.
        type: string
        maxLength: 32
        nullable: true
        example: RDU
      description:
        type: string
      banner:
        type: string
      enabled:
        type: boolean
      reservations_enabled:
        type: boolean
      reservation_expiration_max:
        type: integer
        nullable: true
      lifespan_length:
        type: integer
        minimum: 1
        nullable: true
      quota:
        anyOf:
          - $ref: '#/model/Quota'
          - nullable: true
        example:
          num_vcpus: 40
          ram_mb: 200000
          num_volumes: 40
          volumes_gb: 540
      owner_group:
        type: string
        format: uuid
        readOnly: true
        example: 7670ac07-cb21-448d-af8a-6e3882216be3
      users_group:
        type: string
        format: uuid
        nullable: true
      tower_id:
        $ref: 'common.yml#/model/ID'
      openstack:
        type: object
        properties:
          url:
            type: string
            maxLength: 256
          credentials:
            oneOf:
              - description: Credentials to store in Vault
                type: object
                properties:
                  username:
                    type: string
                  password:
                    type: string
                writeOnly: true
              - description: Credentials path in Vault
                type: string
                maxLength: 256
          project:
            type: string
            maxLength: 64
          domain_name:
            type: string
            maxLength: 64
          domain_id:
            type: string
            maxLength: 64
          networks:
            description: Network providers that can be used in the region
            type: array
            items:
              type: string
              maxLength: 64
            minItems: 1
            uniqueItems: true
          keyname:
            description: SSH key name
            type: string
            maxLength: 64
        example:
          url: https://openstack.example.com:13000
          credentials: kv/region/rdu2-a/openstack
          project: rhub
          domain_name: Default
          domain_id: default
          networks: [provider_net_rhub]
          keyname: rhub
      satellite:
        type: object
        properties:
          hostname:
            type: string
            maxLength: 256
          insecure:
            type: boolean
          credentials:
            oneOf:
              - description: Credentials to store in Vault
                type: object
                properties:
                  username:
                    type: string
                  password:
                    type: string
                writeOnly: true
              - description: Credentials path in Vault
                type: string
                maxLength: 256
        example:
          hostname: satellite.example.com
          credentials: kv/region/rdu2-a/satellite
      dns_server:
        type: object
        properties:
          hostname:
            type: string
            maxLength: 256
          zone:
            type: string
            maxLength: 256
          key:
            oneOf:
              - description: Credentials to store in Vault
                type: object
                properties:
                  name:
                    type: string
                  secret:
                    type: string
                writeOnly: true
              - description: Credentials path in Vault
                type: string
                maxLength: 256
        example:
          hostname: ns.example.com
          zone: example.com.
          key: kv/region/rdu2-a/dns
      vault_server:
        type: string
        maxLength: 256
        example: https://vault.example.com
      download_server:
        type: string
        maxLength: 256
        example: https://download.example.com

  ClusterStatus:
    type: string
    nullable: true
    enum:
      - Active
      - Deleted
      - Deleting
      - Deletion Failed
      - Deletion Queued
      - Installation Failed
      - Installation Queued
      - Installing
      - Post-Deleting
      - Post-Deletion Failed
      - Post-Deletion Queued
      - Post-Installation Failed
      - Post-Installation Queued
      - Post-Installing
      - Post-Provisioning
      - Post-Provisioning Failed
      - Post-Provisioning Queued
      - Pre-Deleting
      - Pre-Deletion Failed
      - Pre-Deletion Queued
      - Pre-Installation Failed
      - Pre-Installation Queued
      - Pre-Installing
      - Pre-Provisioning
      - Pre-Provisioning Failed
      - Pre-Provisioning Queued
      - Provisioning
      - Provisioning Failed
      - Provisioning Queued

  Cluster:
    type: object
    properties:
      id:
        allOf:
          - $ref: 'common.yml#/model/ID'
          - readOnly: true
      name:
        type: string
        pattern: '^[a-z0-9]+$'
        maxLength: 20
      description:
        type: string
      user_id:
        type: string
        format: uuid
        readOnly: true
      user_name:
        type: string
        readOnly: true
      group_id:
        type: string
        format: uuid
        nullable: true
      group_name:
        type: string
        nullable: true
        readOnly: true
      created:
        type: string
        format: date-time
        readOnly: true
      region_id:
        $ref: 'common.yml#/model/ID'
      region_name:
        type: string
        readOnly: true
      reservation_expiration:
        type: string
        format: date-time
        description: Soft-limit expiration.
        nullable: true
      lifespan_expiration:
        type: string
        format: date-time
        description: Hard-limit expiration.
        nullable: true
      status:
        $ref: '#/model/ClusterStatus'
      quota:
        anyOf:
          - $ref: '#/model/Quota'
          - nullable: true
        example:
          num_vcpus: 40
          ram_mb: 200000
          num_volumes: 40
          volumes_gb: 540
      hosts:
        type: array
        readOnly: true
        items:
          $ref: '#/model/ClusterHost'

  ClusterEvent:
    type: object
    properties:
      id:
        allOf:
          - $ref: 'common.yml#/model/ID'
          - readOnly: true
      date:
        type: string
        format: date-time
        readOnly: true
      user_id:
        type: string
        format: uuid
        nullable: true
      cluster_id:
        allOf:
          - $ref: 'common.yml#/model/ID'
          - readOnly: true
    oneOf:
      - properties:
          type:
            type: string
            enum: [tower_job]
          tower_id:
            anyOf:
              - $ref: 'common.yml#/model/ID'
              - nullable: true
          tower_job_id:
            anyOf:
              - $ref: 'common.yml#/model/ID'
              - nullable: true
          status:
            $ref: '#/model/ClusterStatus'
      - properties:
          type:
            type: string
            enum: [reservation_change, lifespan_change]
          old_value:
            type: string
            format: date-time
            nullable: true
          new_value:
            type: string
            format: date-time
            nullable: true

  ClusterHost:
    type: object
    properties:
      id:
        allOf:
          - $ref: 'common.yml#/model/ID'
          - readOnly: true
      cluster_id:
        allOf:
          - $ref: 'common.yml#/model/ID'
          - readOnly: true
      fqdn:
        type: string
        maxLength: 256
        format: hostname
      num_vcpus:
        type: integer
        nullable: true
      ram_mb:
        type: integer
        nullable: true
      num_volumes:
        type: integer
        nullable: true
      volumes_gb:
        type: integer
        nullable: true
      ipaddr:
        type: array
        items:
          oneOf:
            - type: string
              format: ipv4
            - type: string
              format: ipv6

  Template:
    type: object
    properties:
      id:
        allOf:
          - $ref: 'common.yml#/model/ID'
          - readOnly: true
      name:
        type: string
        pattern: '^\w+$'
      description:
        type: string
      enabled:
        type: boolean

  Bundle:
    type: object
    properties:
      id:
        allOf:
          - $ref: 'common.yml#/model/ID'
          - readOnly: true
      name:
        type: string
        pattern: '^\w+$'
      description:
        type: string
      enabled:
        type: boolean

parameters:

  region_id:
    name: region_id
    in: path
    description: ID of the region
    required: true
    schema:
      $ref: 'common.yml#/model/ID'
  cluster_id:
    name: cluster_id
    in: path
    description: ID of the cluster
    required: true
    schema:
      $ref: 'common.yml#/model/ID'
  template_id:
    name: template_id
    in: path
    description: ID of the template
    required: true
    schema:
      $ref: 'common.yml#/model/ID'
  bundle_id:
    name: bundle_id
    in: path
    description: ID of the bundle
    required: true
    schema:
      $ref: 'common.yml#/model/ID'
  event_id:
    name: event_id
    in: path
    description: ID of the event
    required: true
    schema:
      $ref: 'common.yml#/model/ID'

endpoints:

  region_list:
    summary: Get region list
    tags: [lab]
    operationId: rhub.api.lab.region.list_regions
    parameters:
      - name: filter
        in: query
        description: Filter clusters by attributes.
        explode: false
        schema:
          type: object
          properties:
            name:
              type: string
              description: >
                Name of a region. Wildcard ``%`` can be used to match zero, one,
                or multiple characters
            location:
              type: string
              description: >
                Location of a region. Wildcard ``%`` can be used to match zero,
                one, or multiple characters
      - name: page
        in: query
        description: Page number (``0`` indexed).
        schema:
          type: integer
          minimum: 0
      - name: limit
        in: query
        schema:
          type: integer
          minimum: 1
    responses:
      '200':
        description: List of Region
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/model/Region'
                total:
                  type: integer
                  minimum: 0
                  description: The total number of items
      default:
        $ref: 'common.yml#/responses/problem'
    security:
      - oauth2: []

  region_create:
    summary: Create region
    description: |
      See [create cluster endpoint](#/lab/rhub.api.lab.cluster.create_cluster)
      for more info how reservation, lifespan, and other properties affects clusters.

      `quota` and `lifespan` can be set to `null` to provide unlimited access
      to the region.

      `users_group` limits region to a selected group of users, if the value
      is `null` any user can use region.
    tags: [lab]
    operationId: rhub.api.lab.region.create_region
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            allOf:
              - $ref: '#/model/Region'
              - required:
                  - dns_server
                  - download_server
                  - name
                  - openstack
                  - satellite
                  - tower_id
                  - vault_server
              - properties:
                  openstack:
                    required:
                      - credentials
                      - domain_id
                      - domain_name
                      - keyname
                      - networks
                      - project
                      - url
                  satellite:
                    required:
                      - credentials
                      - hostname
                  dns_server:
                    required:
                      - hostname
                      - key
                      - zone
    responses:
      '200':
        description: Success
      default:
        $ref: 'common.yml#/responses/problem'
    security:
      - oauth2: []

  region_get:
    summary: Get region
    tags: [lab]
    operationId: rhub.api.lab.region.get_region
    parameters:
      - $ref: '#/parameters/region_id'
    responses:
      '200':
        description: Region
        content:
          application/json:
            schema:
              $ref: '#/model/Region'
      '404':
        description: Not found
      default:
        $ref: 'common.yml#/responses/problem'
    security:
      - oauth2: []

  region_update:
    summary: Update region
    tags: [lab]
    operationId: rhub.api.lab.region.update_region
    parameters:
      - $ref: '#/parameters/region_id'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/model/Region'
          example:
            lifespan_length: 60
            quota:
              num_vcpus: 40
              ram_mb: 200000
              num_volumes: 40
              volumes_gb: 500
    responses:
      '200':
        description: Success
      default:
        $ref: 'common.yml#/responses/problem'
    security:
      - oauth2: []

  region_delete:
    summary: Delete region
    tags: [lab]
    operationId: rhub.api.lab.region.delete_region
    parameters:
      - $ref: '#/parameters/region_id'
    responses:
      '204':
        description: Success
      default:
        $ref: 'common.yml#/responses/problem'
    security:
      - oauth2: []

  region_list_templates:
    summary: Get templates available on region
    tags: [lab]
    operationId: rhub.api.lab.region.list_region_templates
    parameters:
      - $ref: '#/parameters/region_id'
    responses:
      '200':
        description: List of Template
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/model/Template'
      default:
        $ref: 'common.yml#/responses/problem'

  region_add_template:
    summary: Add template to region
    tags: [lab]
    operationId: rhub.api.lab.region.add_region_template
    parameters:
      - $ref: '#/parameters/region_id'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - id
            properties:
              id:
                $ref: 'common.yml#/model/ID'
    responses:
      '200':
        description: Success
      default:
        $ref: 'common.yml#/responses/problem'

  region_remove_template:
    summary: Remove template from region
    tags: [lab]
    operationId: rhub.api.lab.region.delete_region_template
    parameters:
      - $ref: '#/parameters/region_id'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - id
            properties:
              id:
                $ref: 'common.yml#/model/ID'
    responses:
      '200':
        description: Success
      default:
        $ref: 'common.yml#/responses/problem'

  template_list:
    summary: Get template list
    tags: [lab]
    operationId: rhub.api.lab.template.list_templates
    responses:
      '200':
        description: List of Template
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/model/Template'
      default:
        $ref: 'common.yml#/responses/problem'

  template_create:
    summary: Create template
    tags: [lab]
    operationId: rhub.api.lab.template.create_template
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            allOf:
              - $ref: '#/model/Template'
              - required:
                  - name
    responses:
      '200':
        description: Success
      default:
        $ref: 'common.yml#/responses/problem'

  template_get:
    summary: Get template
    tags: [lab]
    operationId: rhub.api.lab.template.get_template
    parameters:
      - $ref: '#/parameters/template_id'
    responses:
      '200':
        description: Template
        content:
          application/json:
            schema:
              $ref: '#/model/Template'
      '404':
        description: Not found
      default:
        $ref: 'common.yml#/responses/problem'

  template_update:
    summary: Update template
    tags: [lab]
    operationId: rhub.api.lab.template.update_template
    parameters:
      - $ref: '#/parameters/template_id'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/model/Template'
    responses:
      '200':
        description: Success
      default:
        $ref: 'common.yml#/responses/problem'

  template_delete:
    summary: Delete template
    tags: [lab]
    operationId: rhub.api.lab.template.delete_template
    parameters:
      - $ref: '#/parameters/template_id'
    responses:
      '200':
        description: Success
      default:
        $ref: 'common.yml#/responses/problem'

  template_list_bundles:
    summary: Get bundles available for template
    tags: [lab]
    operationId: rhub.api.lab.template.list_template_bundles
    parameters:
      - $ref: '#/parameters/template_id'
    responses:
      '200':
        description: List of Bundle
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/model/Bundle'
      default:
        $ref: 'common.yml#/responses/problem'

  template_add_bundle:
    summary: Add bundle to template
    tags: [lab]
    operationId: rhub.api.lab.template.add_template_bundle
    parameters:
      - $ref: '#/parameters/template_id'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - id
            properties:
              id:
                $ref: 'common.yml#/model/ID'
    responses:
      '200':
        description: Success
      default:
        $ref: 'common.yml#/responses/problem'

  template_remove_bundle:
    summary: Remove bundle from template
    tags: [lab]
    operationId: rhub.api.lab.template.delete_template_bundle
    parameters:
      - $ref: '#/parameters/template_id'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - id
            properties:
              id:
                $ref: 'common.yml#/model/ID'
    responses:
      '200':
        description: Success
      default:
        $ref: 'common.yml#/responses/problem'

  bundle_list:
    summary: Get bundle list
    tags: [lab]
    operationId: rhub.api.lab.bundle.list_bundles
    responses:
      '200':
        description: List of Bundle
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/model/Bundle'
      default:
        $ref: 'common.yml#/responses/problem'

  bundle_create:
    summary: Create bundle
    tags: [lab]
    operationId: rhub.api.lab.bundle.create_bundle
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            allOf:
              - $ref: '#/model/Bundle'
              - required:
                  - name
    responses:
      '200':
        description: Success
      default:
        $ref: 'common.yml#/responses/problem'

  bundle_get:
    summary: Get bundle
    tags: [lab]
    operationId: rhub.api.lab.bundle.get_bundle
    parameters:
      - $ref: '#/parameters/bundle_id'
    responses:
      '200':
        description: Bundle
        content:
          application/json:
            schema:
              $ref: '#/model/Bundle'
      '404':
        description: Not found
      default:
        $ref: 'common.yml#/responses/problem'

  bundle_update:
    summary: Update bundle
    tags: [lab]
    operationId: rhub.api.lab.bundle.update_bundle
    parameters:
      - $ref: '#/parameters/bundle_id'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/model/Bundle'
    responses:
      '200':
        description: Success
      default:
        $ref: 'common.yml#/responses/problem'

  bundle_delete:
    summary: Delete bundle
    tags: [lab]
    operationId: rhub.api.lab.bundle.delete_bundle
    parameters:
      - $ref: '#/parameters/bundle_id'
    responses:
      '200':
        description: Success
      default:
        $ref: 'common.yml#/responses/problem'

  cluster_list:
    summary: Get cluster list
    tags: [lab]
    operationId: rhub.api.lab.cluster.list_clusters
    parameters:
      - name: filter
        in: query
        description: Filter clusters by attributes.
        explode: false
        schema:
          type: object
          properties:
            name:
              type: string
              pattern: '^[\w%]+$'
              description: >
                Name of a cluster. Wildcard ``%`` can be used to match zero, one, or
                multiple characters
            region_id:
              type: integer
              minimum: 1
              description: ID of the region.
            user_id:
              description: ID of the user.
              type: string
              format: uuid
            group_id:
              type: string
              format: uuid
              nullable: true
              description: ID of the group or ``null``.
            shared:
              type: boolean
              description: Filter shared clusters
      - name: page
        in: query
        description: Page number (``0`` indexed).
        schema:
          type: integer
          minimum: 0
      - name: limit
        in: query
        schema:
          type: integer
          minimum: 1
    responses:
      '200':
        description: List of Cluster
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/model/Cluster'
                total:
                  type: integer
                  minimum: 0
                  description: The total number of items.
      default:
        $ref: 'common.yml#/responses/problem'
    security:
      - oauth2: []

  cluster_create:
    summary: Create cluster
    description: |
      When the Reservation System is enabled in a region, a new cluster in
      that region will be required to select the length of the reservation in
      `reservation_expiration` field. Reservation sets soft-limit on cluster,
      when reservation expires cluster will be scheduled for deletion. Maximal
      `reservation_expiration` date is determined from the date of creation (or
      current expiration date when extending expiration) and
      `reservation_expiration_max` attribute on the region.

      When the Lifespan System is enabled in a region, `lifespan_expiration`
      date will automatically be applied to the cluster by backend at time of
      creation. The date is configured on region. Unlike the reservation
      expiration, lifespan is hard-limit and this date can not be set nor
      modified once cluster is created. When lifespan expires cluster will be
      unconditionally scheduled for deletion.
    tags: [lab]
    operationId: rhub.api.lab.cluster.create_cluster
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/model/Cluster'
    responses:
      '200':
        description: Cluster
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/model/Cluster'
                - required:
                    - name
                    - region_id
                    - reservation_expiration
      default:
        $ref: 'common.yml#/responses/problem'
    security:
      - oauth2: []

  cluster_get:
    summary: Get cluster
    tags: [lab]
    operationId: rhub.api.lab.cluster.get_cluster
    parameters:
      - $ref: '#/parameters/cluster_id'
    responses:
      '200':
        description: Cluster
        content:
          application/json:
            schema:
              $ref: '#/model/Cluster'
      default:
        $ref: 'common.yml#/responses/problem'
    security:
      - oauth2: []

  cluster_update:
    summary: Update cluster
    description: |
      See [create cluster endpoint](#/lab/rhub.api.lab.cluster.create_cluster) for more info.
    tags: [lab]
    operationId: rhub.api.lab.cluster.update_cluster
    parameters:
      - $ref: '#/parameters/cluster_id'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/model/Cluster'
    responses:
      '200':
        description: Cluster
        content:
          application/json:
            schema:
              $ref: '#/model/Cluster'
      default:
        $ref: 'common.yml#/responses/problem'
    security:
      - oauth2: []

  cluster_delete:
    summary: Delete cluster
    tags: [lab]
    operationId: rhub.api.lab.cluster.delete_cluster
    parameters:
      - $ref: '#/parameters/cluster_id'
    responses:
      '204':
        description: Success
      default:
        $ref: 'common.yml#/responses/problem'
    security:
      - oauth2: []

  cluster_list_events:
    summary: Get cluster events list
    tags: [lab]
    operationId: rhub.api.lab.cluster.list_cluster_events
    parameters:
      - $ref: '#/parameters/cluster_id'
    responses:
      '200':
        description: Cluster events
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/model/ClusterEvent'
      default:
        $ref: 'common.yml#/responses/problem'
    security:
      - oauth2: []

  cluster_event_get:
    summary: Get cluster event
    tags: [lab]
    operationId: rhub.api.lab.cluster.get_cluster_event
    parameters:
      - $ref: '#/parameters/event_id'
    responses:
      '200':
        description: Cluster event
        content:
          application/json:
            schema:
              $ref: '#/model/ClusterEvent'
      default:
        $ref: 'common.yml#/responses/problem'
    security:
      - oauth2: []

  cluster_event_get_stdout:
    summary: Get cluster event output
    tags: [lab]
    operationId: rhub.api.lab.cluster.get_cluster_event_stdout
    parameters:
      - $ref: '#/parameters/event_id'
    responses:
      '200':
        description: Event output
        content:
          text/plain:
            schema:
              type: string
      default:
        $ref: 'common.yml#/responses/problem'
    security:
      - oauth2: []

  cluster_hosts_list:
    summary: Get cluster hosts
    tags: [lab]
    operationId: rhub.api.lab.cluster.list_cluster_hosts
    parameters:
      - $ref: '#/parameters/cluster_id'
    responses:
      '200':
        description: Cluster hosts
        content:
          text/plain:
            schema:
              type: array
              items:
                $ref: '#/model/ClusterHost'
      default:
        $ref: 'common.yml#/responses/problem'
    security:
      - oauth2: []

  cluster_hosts_create:
    summary: Create or update cluster hosts
    tags: [lab]
    operationId: rhub.api.lab.cluster.create_cluster_hosts
    parameters:
      - $ref: '#/parameters/cluster_id'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/model/ClusterHost'
                - required:
                    - fqdn
                    - ipaddr
    responses:
      '200':
        description: Cluster hosts
        content:
          text/plain:
            schema:
              type: array
              items:
                $ref: '#/model/ClusterHost'
      default:
        $ref: 'common.yml#/responses/problem'
    security:
      - oauth2: []

  cluster_hosts_delete:
    summary: Delete cluster hosts
    tags: [lab]
    operationId: rhub.api.lab.cluster.delete_cluster_hosts
    parameters:
      - $ref: '#/parameters/cluster_id'
    responses:
      '204':
        description: Success
      default:
        $ref: 'common.yml#/responses/problem'
    security:
      - oauth2: []
