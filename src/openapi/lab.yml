model:

  Quota:
    type: object
    properties:
      num_vcpus:
        type: integer
        minimum: 1
        nullable: true
      ram_mb:
        type: integer
        minimum: 1
        nullable: true
      num_volumes:
        type: integer
        minimum: 1
        nullable: true
      volumes_gb:
        type: integer
        minimum: 1
        nullable: true

  Tower:
    type: object
    properties:
      id:
        allOf:
          - $ref: 'common.yml#/model/ID'
          - readOnly: true
      name:
        type: string
        pattern: '^\w+$'
      description:
        type: string
      enabled:
        type: boolean
      url:
        type: string
        format: url
      credentials:
        type: string
        description: Tower credentials path (Vault mount/path)

  Region:
    type: object
    properties:
      id:
        allOf:
          - $ref: 'common.yml#/model/ID'
          - readOnly: true
      name:
        type: string
        maxLength: 32
      location:
        description: Geographical location of region.
        type: string
        maxLength: 32
        nullable: true
      description:
        type: string
      banner:
        type: string
      enabled:
        type: boolean
      reservations_enabled:
        type: boolean
      lifespan_length:
        type: integer
        minimum: 1
        nullable: true
      quota:
        anyOf:
          - $ref: '#/model/Quota'
          - nullable: true
      owner_group:
        type: string
        format: uuid
        readOnly: true
      users_group:
        type: string
        format: uuid
        nullable: true
      tower_id:
        $ref: 'common.yml#/model/ID'
    example:
      id: 1
      name: rdu2-a
      location: RDU
      description: ''
      banner: ''
      enabled: true
      reservation_enabled: true
      lifespan_length: 60
      quota:
        num_vcpus: 40
        ram_mb: 200000
        num_volumes: 40
        volumes_gb: 540
      owner_group: 7670ac07-cb21-448d-af8a-6e3882216be3
      users_group: null
      tower_id: 1

  Cluster:
    type: object
    properties:
      id:
        allOf:
          - $ref: 'common.yml#/model/ID'
          - readOnly: true
      name:
        type: string
        pattern: '^\w+$'
      description:
        type: string
      extra_vars:
        type: object
      user_id:
        $ref: 'common.yml#/model/ID'
      region_id:
        $ref: 'common.yml#/model/ID'
      template_id:
        $ref: 'common.yml#/model/ID'
      reservation_expiration:
        type: string
        format: date-time
        description: Soft-limit expiration.
      lifespan_expiration:
        type: string
        format: date-time
        readOnly: true
        description: Hard-limit expiration.

  Template:
    type: object
    properties:
      id:
        allOf:
          - $ref: 'common.yml#/model/ID'
          - readOnly: true
      name:
        type: string
        pattern: '^\w+$'
      description:
        type: string
      enabled:
        type: boolean

  Bundle:
    type: object
    properties:
      id:
        allOf:
          - $ref: 'common.yml#/model/ID'
          - readOnly: true
      name:
        type: string
        pattern: '^\w+$'
      description:
        type: string
      enabled:
        type: boolean

parameters:

  tower_id:
    name: tower_id
    in: path
    description: ID of the tower
    required: true
    schema:
      $ref: 'common.yml#/model/ID'
  region_id:
    name: region_id
    in: path
    description: ID of the region
    required: true
    schema:
      $ref: 'common.yml#/model/ID'
  cluster_id:
    name: cluster_id
    in: path
    description: ID of the cluster
    required: true
    schema:
      $ref: 'common.yml#/model/ID'
  template_id:
    name: template_id
    in: path
    description: ID of the template
    required: true
    schema:
      $ref: 'common.yml#/model/ID'
  bundle_id:
    name: bundle_id
    in: path
    description: ID of the bundle
    required: true
    schema:
      $ref: 'common.yml#/model/ID'

endpoints:

  tower_list:
    summary: Get tower list
    tags: [lab]
    operationId: rhub.api.lab.tower.list_towers
    responses:
      '200':
        description: List of Tower
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/model/Tower'
      default:
        $ref: 'common.yml#/responses/problem'

  tower_create:
    summary: Create tower
    tags: [lab]
    operationId: rhub.api.lab.tower.create_tower
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            allOf:
              - $ref: '#/model/Tower'
              - required:
                  - name
                  - url
    responses:
      '200':
        description: Success
      default:
        $ref: 'common.yml#/responses/problem'

  tower_get:
    summary: Get tower
    tags: [lab]
    operationId: rhub.api.lab.tower.get_tower
    parameters:
      - $ref: '#/parameters/tower_id'
    responses:
      '200':
        description: Tower
        content:
          application/json:
            schema:
              $ref: '#/model/Tower'
      '404':
        description: Not found
      default:
        $ref: 'common.yml#/responses/problem'

  tower_update:
    summary: Update tower
    tags: [lab]
    operationId: rhub.api.lab.tower.update_tower
    parameters:
      - $ref: '#/parameters/tower_id'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/model/Tower'
    responses:
      '200':
        description: Success
      default:
        $ref: 'common.yml#/responses/problem'

  tower_delete:
    summary: Delete tower
    tags: [lab]
    operationId: rhub.api.lab.tower.delete_tower
    parameters:
      - $ref: '#/parameters/tower_id'
    responses:
      '200':
        description: Success
      default:
        $ref: 'common.yml#/responses/problem'

  region_list:
    summary: Get region list
    tags: [lab]
    operationId: rhub.api.lab.region.list_regions
    responses:
      '200':
        description: List of Region
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/model/Region'
      default:
        $ref: 'common.yml#/responses/problem'
    security:
      - oauth2: []

  region_create:
    summary: Create region
    description: |
      See [create cluster endpoint](#/lab/rhub.api.lab.cluster.create_cluster)
      for more info how reservation, lifespan, and other properties affects clusters.

      `quota` and `lifespan` can be set to `null` to provide unlimited access
      to the region.

      `users_group` limits region to a selected group of users, if the value
      is `null` any user can use region.
    tags: [lab]
    operationId: rhub.api.lab.region.create_region
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            allOf:
              - $ref: '#/model/Region'
              - required:
                  - name
                  - tower_id
          example:
            name: rdu2-a
            location: RDU
            enabled: true
            reservation_enabled: true
            lifespan_length: 60
            quota:
              num_vcpus: 40
              ram_mb: 200000
              num_volumes: 40
              volumes_gb: 540
            tower_id: 1
    responses:
      '200':
        description: Success
      default:
        $ref: 'common.yml#/responses/problem'
    security:
      - oauth2: []

  region_get:
    summary: Get region
    tags: [lab]
    operationId: rhub.api.lab.region.get_region
    parameters:
      - $ref: '#/parameters/region_id'
    responses:
      '200':
        description: Region
        content:
          application/json:
            schema:
              $ref: '#/model/Region'
      '404':
        description: Not found
      default:
        $ref: 'common.yml#/responses/problem'
    security:
      - oauth2: []

  region_update:
    summary: Update region
    tags: [lab]
    operationId: rhub.api.lab.region.update_region
    parameters:
      - $ref: '#/parameters/region_id'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/model/Region'
          example:
            lifespan_length: 60
            quota:
              num_vcpus: 40
              ram_mb: 200000
              num_volumes: 40
              volumes_gb: 500
    responses:
      '200':
        description: Success
      default:
        $ref: 'common.yml#/responses/problem'
    security:
      - oauth2: []

  region_delete:
    summary: Delete region
    tags: [lab]
    operationId: rhub.api.lab.region.delete_region
    parameters:
      - $ref: '#/parameters/region_id'
    responses:
      '204':
        description: Success
      default:
        $ref: 'common.yml#/responses/problem'
    security:
      - oauth2: []

  region_list_templates:
    summary: Get templates available on region
    tags: [lab]
    operationId: rhub.api.lab.region.list_region_templates
    parameters:
      - $ref: '#/parameters/region_id'
    responses:
      '200':
        description: List of Template
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/model/Template'
      default:
        $ref: 'common.yml#/responses/problem'

  region_add_template:
    summary: Add template to region
    tags: [lab]
    operationId: rhub.api.lab.region.add_region_template
    parameters:
      - $ref: '#/parameters/region_id'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - id
            properties:
              id:
                $ref: 'common.yml#/model/ID'
    responses:
      '200':
        description: Success
      default:
        $ref: 'common.yml#/responses/problem'

  region_remove_template:
    summary: Remove template from region
    tags: [lab]
    operationId: rhub.api.lab.region.delete_region_template
    parameters:
      - $ref: '#/parameters/region_id'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - id
            properties:
              id:
                $ref: 'common.yml#/model/ID'
    responses:
      '200':
        description: Success
      default:
        $ref: 'common.yml#/responses/problem'

  template_list:
    summary: Get template list
    tags: [lab]
    operationId: rhub.api.lab.template.list_templates
    responses:
      '200':
        description: List of Template
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/model/Template'
      default:
        $ref: 'common.yml#/responses/problem'

  template_create:
    summary: Create template
    tags: [lab]
    operationId: rhub.api.lab.template.create_template
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            allOf:
              - $ref: '#/model/Template'
              - required:
                  - name
    responses:
      '200':
        description: Success
      default:
        $ref: 'common.yml#/responses/problem'

  template_get:
    summary: Get template
    tags: [lab]
    operationId: rhub.api.lab.template.get_template
    parameters:
      - $ref: '#/parameters/template_id'
    responses:
      '200':
        description: Template
        content:
          application/json:
            schema:
              $ref: '#/model/Template'
      '404':
        description: Not found
      default:
        $ref: 'common.yml#/responses/problem'

  template_update:
    summary: Update template
    tags: [lab]
    operationId: rhub.api.lab.template.update_template
    parameters:
      - $ref: '#/parameters/template_id'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/model/Template'
    responses:
      '200':
        description: Success
      default:
        $ref: 'common.yml#/responses/problem'

  template_delete:
    summary: Delete template
    tags: [lab]
    operationId: rhub.api.lab.template.delete_template
    parameters:
      - $ref: '#/parameters/template_id'
    responses:
      '200':
        description: Success
      default:
        $ref: 'common.yml#/responses/problem'

  template_list_bundles:
    summary: Get bundles available for template
    tags: [lab]
    operationId: rhub.api.lab.template.list_template_bundles
    parameters:
      - $ref: '#/parameters/template_id'
    responses:
      '200':
        description: List of Bundle
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/model/Bundle'
      default:
        $ref: 'common.yml#/responses/problem'

  template_add_bundle:
    summary: Add bundle to template
    tags: [lab]
    operationId: rhub.api.lab.template.add_template_bundle
    parameters:
      - $ref: '#/parameters/template_id'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - id
            properties:
              id:
                $ref: 'common.yml#/model/ID'
    responses:
      '200':
        description: Success
      default:
        $ref: 'common.yml#/responses/problem'

  template_remove_bundle:
    summary: Remove bundle from template
    tags: [lab]
    operationId: rhub.api.lab.template.delete_template_bundle
    parameters:
      - $ref: '#/parameters/template_id'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - id
            properties:
              id:
                $ref: 'common.yml#/model/ID'
    responses:
      '200':
        description: Success
      default:
        $ref: 'common.yml#/responses/problem'

  bundle_list:
    summary: Get bundle list
    tags: [lab]
    operationId: rhub.api.lab.bundle.list_bundles
    responses:
      '200':
        description: List of Bundle
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/model/Bundle'
      default:
        $ref: 'common.yml#/responses/problem'

  bundle_create:
    summary: Create bundle
    tags: [lab]
    operationId: rhub.api.lab.bundle.create_bundle
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            allOf:
              - $ref: '#/model/Bundle'
              - required:
                  - name
    responses:
      '200':
        description: Success
      default:
        $ref: 'common.yml#/responses/problem'

  bundle_get:
    summary: Get bundle
    tags: [lab]
    operationId: rhub.api.lab.bundle.get_bundle
    parameters:
      - $ref: '#/parameters/bundle_id'
    responses:
      '200':
        description: Bundle
        content:
          application/json:
            schema:
              $ref: '#/model/Bundle'
      '404':
        description: Not found
      default:
        $ref: 'common.yml#/responses/problem'

  bundle_update:
    summary: Update bundle
    tags: [lab]
    operationId: rhub.api.lab.bundle.update_bundle
    parameters:
      - $ref: '#/parameters/bundle_id'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/model/Bundle'
    responses:
      '200':
        description: Success
      default:
        $ref: 'common.yml#/responses/problem'

  bundle_delete:
    summary: Delete bundle
    tags: [lab]
    operationId: rhub.api.lab.bundle.delete_bundle
    parameters:
      - $ref: '#/parameters/bundle_id'
    responses:
      '200':
        description: Success
      default:
        $ref: 'common.yml#/responses/problem'

  cluster_list:
    summary: Get cluster list
    tags: [lab]
    operationId: rhub.api.lab.cluster.list_clusters
    responses:
      '200':
        description: List of Cluster
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/model/Cluster'
      default:
        $ref: 'common.yml#/responses/problem'

  cluster_create:
    summary: Create cluster
    description: |
      When the Reservation System is enabled in a region, a new cluster in
      that region will be required to select the length of the reservation in
      `reservation_expiration` field. Reservation sets soft-limit on cluster,
      when reservation expires cluster will be scheduled for deletion.

      When the Lifespan System is enabled in a region, `lifespan_expiration`
      date will automatically be applied to the cluster by backend at time of
      creation. The date is configured on region. Unlike the reservation
      expiration, lifespan is hard-limit and this date can not be set nor
      modified once cluster is created. When livespan expires cluster will be
      unconditionally scheduled for deletion
    tags: [lab]
    operationId: rhub.api.lab.cluster.create_cluster
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            allOf:
              - $ref: '#/model/Cluster'
              - required:
                  - name
                  - user_id
                  - region_id
                  - template_id
    responses:
      '200':
        description: Success
      default:
        $ref: 'common.yml#/responses/problem'

  cluster_get:
    summary: Get cluster
    tags: [lab]
    operationId: rhub.api.lab.cluster.get_cluster
    parameters:
      - $ref: '#/parameters/cluster_id'
    responses:
      '200':
        description: Cluster
        content:
          application/json:
            schema:
              $ref: '#/model/Cluster'
      '404':
        description: Not found
      default:
        $ref: 'common.yml#/responses/problem'

  cluster_update:
    summary: Update cluster
    description: |
      See [create cluster endpoint](#/lab/rhub.api.lab.cluster.create_cluster) for more info.
    tags: [lab]
    operationId: rhub.api.lab.cluster.update_cluster
    parameters:
      - $ref: '#/parameters/cluster_id'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/model/Cluster'
    responses:
      '200':
        description: Success
      default:
        $ref: 'common.yml#/responses/problem'

  cluster_delete:
    summary: Delete cluster
    tags: [lab]
    operationId: rhub.api.lab.cluster.delete_cluster
    parameters:
      - $ref: '#/parameters/cluster_id'
    responses:
      '200':
        description: Success
      default:
        $ref: 'common.yml#/responses/problem'
