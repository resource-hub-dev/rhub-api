version: '3.9'

networks:
  default:
    name: rhub-development

services:
  rhub-api:
    build:
      context: .
    image: quay.io/resource-hub-dev/rhub-api
    command: rhub-api
    volumes: &rhub-api-volumes
      - .:/opt/app-root/src/rhub_api/:delegated,z
      - ./data/bare_metal_logs/:/srv/bare_metal_logs/:delegated,z
      - ./data/vault.yml:/srv/vault.yml:delegated,z
      - ./data/vault-data.yml:/srv/vault-data.yml:delegated,z
    environment: &rhub-api-environment
      FLASK_APP: ${FLASK_APP:-rhub.api:create_app()}
      FLASK_ENV: ${FLASK_ENV:-development}
      FLASK_RUN_HOST: ${FLASK_RUN_HOST:-0.0.0.0}
      FLASK_RUN_PORT: ${FLASK_RUN_PORT:-8081}
      RHUB_SKIP_INIT: ${RHUB_SKIP_INIT:-False}
      RHUB_RETURN_INITIAL_FLASK_APP: ${RHUB_RETURN_INITIAL_FLASK_APP:-False}
      REQUESTS_CA_BUNDLE: /etc/pki/tls/certs/ca-bundle.crt
    env_file:
      - .env
    ports:
      - "8081:8081"

  rhub-worker:
    build:
      context: .
    image: quay.io/resource-hub-dev/rhub-api
    command: rhub-worker
    volumes: *rhub-api-volumes
    environment: *rhub-api-environment
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "./bin/healthcheck.sh", "rhub-worker" ]
      interval: 30s
      retries: 5
      timeout: 30s

  postgres:
    image: postgres:${RHUB_IMAGE_POSTGRES_VERSION:-13}
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./bin/setup_postgres.sh:/docker-entrypoint-initdb.d/setup_postgres.sh:delegated,z
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      retries: 5
      timeout: 5s

  broker:
    image: rabbitmq:${RHUB_IMAGE_RABBITMQ_VERSION:-3}
    env_file:
      - .env
    ports:
      - '5672:5672'
      - '15672:15672' # web UI
      - '15674:15674' #webstomp
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "-q", "ping" ]
      interval: 30s
      retries: 5
      timeout: 30s
    volumes:
      - ./config/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
      - ./config/rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins:ro

  otel:
    image: otel/opentelemetry-collector-contrib-dev:latest
    ports:
      - "8889:8889" # prometheus federation
      - "8888:8888" # metrics from otel itself
      - "1888:1888" # pprof extension
      - "55679:55679" # zpages extension
    volumes:
      - ./config/otel.yaml:/etc/otel/config.yaml:ro
      - ./config/otel-internal-rhub-exporter.json:/etc/otel/otel-internal-rhub-exporter.json:ro
      - ./config/otel-all-nodes.json:/etc/otel/otel-all-nodes.json:ro
    healthcheck:
      disable: true

  blackbox_exporter:
    image: prom/blackbox-exporter:master
    privileged: yes # needs to be privileged because of ICMP
    ports:
      - "9115:9115"
    volumes:
      - ./config/blackbox.yaml:/config/blackbox.yml:ro
    command:
      - "--config.file=/config/blackbox.yml"
    healthcheck:
      disable: true

  snmp_exporter:
    image: prom/snmp-exporter
    ports:
      - "9116:9116"
    healthcheck:
      disable: true

volumes:
  postgres_data:
