version: '3.9'

networks:
  default:
    name: rhub-development

secrets:
  user_ssh_key:
    file: ~/.ssh/id_rsa

services:
  rhub-api:
    build:
      context: .
    image: quay.io/resource-hub-dev/rhub-api
    volumes:
      - .:/opt/app-root/src/rhub_api/:delegated,z
      - ./data/bare_metal_logs/:/srv/bare_metal_logs/:delegated,z
      - ./data/vault.yml:/srv/vault.yml:delegated,z
      - ./data/vault-data.yml:/srv/vault-data.yml:delegated,z
    environment:
      FLASK_APP: ${FLASK_APP:-rhub.api:create_app()}
      FLASK_ENV: ${FLASK_ENV:-development}
      FLASK_RUN_HOST: ${FLASK_RUN_HOST:-0.0.0.0}
      FLASK_RUN_PORT: ${FLASK_RUN_PORT:-8081}
      RHUB_SKIP_INIT: ${RHUB_SKIP_INIT:-False}
      RHUB_RETURN_INITIAL_FLASK_APP: ${RHUB_RETURN_INITIAL_FLASK_APP:-False}
      REQUESTS_CA_BUNDLE: /etc/pki/tls/certs/ca-bundle.crt
    env_file:
      - .env
    ports:
      - "8081:8081"
    #command: [tail, -f, /dev/null]

  rhub-worker:
    build:
      context: .
    image: quay.io/resource-hub-dev/rhub-api
    volumes:
      - .:/opt/app-root/src/rhub_api/:delegated,z
      - ./data/vault.yml:/srv/vault.yml:delegated,z
      - ./data/vault-data.yml:/srv/vault-data.yml:delegated,z
    environment:
      FLASK_ENV: ${FLASK_ENV:-development}
      RHUB_SKIP_INIT: ${RHUB_SKIP_INIT:-False}
      RHUB_RETURN_INITIAL_FLASK_APP: ${RHUB_RETURN_INITIAL_FLASK_APP:-False}
    env_file:
      - .env
    command: ./bin/entrypoint-worker.sh
    user: "0:0"
    secrets:
      - user_ssh_key
    healthcheck:
      test: celery -A rhub.api.celery_worker:celery inspect ping -d celery@$$HOSTNAME
      interval: 30s
      retries: 5
      timeout: 30s

  rhub-cron:
    build:
      context: .
    image: quay.io/resource-hub-dev/rhub-api
    volumes:
      - .:/opt/app-root/src/rhub_api/:delegated,z
      - ./data/vault.yml:/srv/vault.yml:delegated,z
      - ./data/vault-data.yml:/srv/vault-data.yml:delegated,z
    environment:
      FLASK_ENV: ${FLASK_ENV:-development}
      RHUB_SKIP_INIT: ${RHUB_SKIP_INIT:-False}
      RHUB_RETURN_INITIAL_FLASK_APP: ${RHUB_RETURN_INITIAL_FLASK_APP:-False}
    env_file:
      - .env
    command: ./bin/entrypoint-cron.sh
    user: "0:0"
    secrets:
      - user_ssh_key
    healthcheck:
      disable: true

  keycloak:
    image: quay.io/keycloak/keycloak:${RHUB_IMAGE_KEYCLOAK_VERSION:-15.0.2}
    environment:
      - KEYCLOAK_FRONTEND_URL=http://localhost:8080/auth
    env_file:
      - .env
    ports:
      - "8080:8080"
    volumes:
      - ./config/keycloak-config.json:/srv/rhub-keycloak-config.json:delegated,z
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080" ]
      interval: 20s
      retries: 10
      start_period: 90s
      timeout: 10s

  postgres:
    image: postgres:${RHUB_IMAGE_POSTGRES_VERSION:-13}
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./bin/setup_postgres.sh:/docker-entrypoint-initdb.d/setup_postgres.sh:delegated,z
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      retries: 5
      timeout: 5s

  broker:
    image: rabbitmq:${RHUB_IMAGE_RABBITMQ_VERSION:-3}
    env_file:
      - .env
    ports:
      - '5672:5672'
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "-q", "ping" ]
      interval: 30s
      retries: 5
      timeout: 30s


volumes:
  postgres_data:
